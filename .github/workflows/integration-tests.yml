name: Build and Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Install dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run static analysis
        run: |
          go vet ./...
          go fmt -d .
          if [ -n "$(go fmt -l .)" ]; then
            echo "Code is not formatted. Run 'go fmt ./...'"
            exit 1
          fi

      - name: Run unit tests
        run: go test -v -race -coverprofile=coverage.out ./internal/...

      - name: Run integration tests
        run: go test -v -race ./test/...
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
          DOCKER_HOST: unix:///var/run/docker.sock

      - name: Upload coverage reports
        if: success()
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
